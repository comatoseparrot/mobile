{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"email\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { VStack, FormControl, Input, NativeBaseProvider, Center, Button, Image, Box, Heading, Link } from 'native-base';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ForgotPassword() {\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    formData = _React$useState2[0],\n    setData = _React$useState2[1];\n  var _React$useState3 = React.useState({}),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    errors = _React$useState4[0],\n    setErrors = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isEmailValid = _React$useState6[0],\n    setisEmailValid = _React$useState6[1];\n  var _React$useState7 = React.useState({}),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    email = _React$useState8[0],\n    setEmail = _React$useState8[1];\n  var emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  var validateEmail = function validateEmail() {\n    if (formData.email === undefined) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        email: 'Emai is required'\n      }));\n      return false;\n    } else if (!isEmailValid) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        email: 'Introduce a valid email'\n      }));\n      return false;\n    }\n    return true;\n  };\n  var onSubmit = function onSubmit() {\n    setErrors({});\n    if (isEmailValid) {\n      console.log('Submitted');\n    } else {\n      console.log('Validation Failed');\n    }\n  };\n  function onSetEmail(value) {\n    setEmail(value);\n    setisEmailValid(emailRegex.test(value));\n    clearErrors();\n  }\n  var clearErrors = function clearErrors() {\n    if ('email' in errors) {\n      var _email = errors.email,\n        restErrors = _objectWithoutProperties(errors, _excluded);\n      setErrors(restErrors);\n    }\n  };\n  var navigation = useNavigation();\n  var handleLinkClick = function handleLinkClick() {\n    navigation.navigate(\"Login\");\n  };\n  return _jsx(Box, {\n    flex: 1,\n    bg: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: _jsxs(VStack, {\n      width: \"90%\",\n      mx: \"3\",\n      maxW: \"300px\",\n      children: [_jsx(Image, {\n        source: require(\"../assets/logo.png\"),\n        alt: \"Alternate Text\",\n        size: \"xl\",\n        marginLeft: 75\n      }), _jsx(Center, {\n        children: _jsx(Heading, {\n          size: \"lg\",\n          mb: \"3\",\n          children: \"Forgot Password\"\n        })\n      }), _jsxs(FormControl, {\n        isRequired: true,\n        isInvalid: 'email' in errors,\n        children: [_jsx(FormControl.Label, {\n          _text: {\n            bold: true\n          },\n          children: \"Email\"\n        }), _jsx(Input, {\n          placeholder: \"john@hotmail.com\",\n          onChangeText: function onChangeText(value) {\n            setData(_objectSpread(_objectSpread({}, formData), {}, {\n              email: value\n            }));\n            clearErrors();\n          }\n        }), 'email' in errors ? _jsx(FormControl.ErrorMessage, {\n          children: errors.email\n        }) : _jsx(FormControl.HelperText, {\n          children: \"Introduce valid email!.\"\n        })]\n      }), _jsx(Button, {\n        onPress: onSubmit,\n        mt: \"5\",\n        colorScheme: \"cyan\",\n        children: \"Login\"\n      }), _jsx(Center, {\n        children: _jsx(Link, {\n          _text: {\n            fontSize: \"xl\",\n            _light: {\n              color: \"cyan.500\"\n            },\n            color: \"cyan.300\"\n          },\n          onPress: handleLinkClick,\n          isUnderlined: true,\n          _hover: {\n            _text: {\n              _light: {\n                color: \"cyan.600\"\n              },\n              color: \"cyan.400\"\n            }\n          },\n          children: \"Login\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","VStack","FormControl","Input","NativeBaseProvider","Center","Button","Image","Box","Heading","Link","useNavigation","jsx","_jsx","jsxs","_jsxs","ForgotPassword","_React$useState","useState","_React$useState2","_slicedToArray","formData","setData","_React$useState3","_React$useState4","errors","setErrors","_React$useState5","_React$useState6","isEmailValid","setisEmailValid","_React$useState7","_React$useState8","email","setEmail","emailRegex","validateEmail","undefined","_objectSpread","onSubmit","console","log","onSetEmail","value","test","clearErrors","restErrors","_objectWithoutProperties","_excluded","navigation","handleLinkClick","navigate","flex","bg","alignItems","justifyContent","children","width","mx","maxW","source","require","alt","size","marginLeft","mb","isRequired","isInvalid","Label","_text","bold","placeholder","onChangeText","ErrorMessage","HelperText","onPress","mt","colorScheme","fontSize","_light","color","isUnderlined","_hover"],"sources":["C:/Users/jazze/Desktop/todo-list-mobile-main/Components/ForgotPassword.js"],"sourcesContent":["import React from 'react';\r\nimport { VStack, FormControl, Input, NativeBaseProvider, Center, Button, Image, Box, Heading, Link } from 'native-base';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport default function ForgotPassword() {\r\n    const [formData, setData] = React.useState({});\r\n    const [errors, setErrors] = React.useState({});\r\n    const [isEmailValid, setisEmailValid] = React.useState(false);\r\n    const [email, setEmail] = React.useState({});\r\n\r\n    // RegEx\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\n    const validateEmail = () => {\r\n        if (formData.email === undefined) {\r\n            setErrors({ ...errors, email: 'Emai is required' });\r\n            return false;\r\n        } else if (!isEmailValid) {\r\n            setErrors({ ...errors, email: 'Introduce a valid email' });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        // Clear errors\r\n        setErrors({});\r\n\r\n        if (isEmailValid) {\r\n            console.log('Submitted');\r\n        } else {\r\n            console.log('Validation Failed');\r\n        }\r\n    };\r\n\r\n    function onSetEmail(value) {\r\n        setEmail(value);\r\n        setisEmailValid(emailRegex.test(value));\r\n        clearErrors(); // Clear fields errors when input changes\r\n    }\r\n\r\n    // Clear field errors\r\n    const clearErrors = () => {\r\n        if ('email' in errors) {\r\n            const { email, ...restErrors } = errors;\r\n            setErrors(restErrors);\r\n        }\r\n    };\r\n\r\n        // Navigation\r\n        const navigation = useNavigation();\r\n\r\n\r\n        // Click navigation\r\n        const handleLinkClick = () => {\r\n\r\n            // Navigate to ForgotPassword \r\n            navigation.navigate(\"Login\");\r\n        };\r\n\r\n\r\n    // Form\r\n    return (\r\n        <Box flex={1} bg=\"#fff\" alignItems=\"center\" justifyContent=\"center\">\r\n        <VStack width=\"90%\" mx=\"3\" maxW=\"300px\">\r\n            <Image\r\n                source={require(\"../assets/logo.png\")}\r\n                alt=\"Alternate Text\"\r\n                size=\"xl\"\r\n                marginLeft={75}\r\n            />\r\n        <Center>\r\n            <Heading size=\"lg\" mb=\"3\">\r\n                Forgot Password\r\n            </Heading>\r\n        </Center>\r\n            {/* Email */}\r\n            <FormControl isRequired isInvalid={'email' in errors}>\r\n                <FormControl.Label _text={{ bold: true }}>Email</FormControl.Label>\r\n                <Input\r\n                    placeholder=\"john@hotmail.com\"\r\n                    onChangeText={(value) => {\r\n                        setData({ ...formData, email: value });\r\n                        clearErrors(); // Clear field errors when the input changes\r\n                    }}\r\n                />\r\n                {'email' in errors ? (\r\n                    <FormControl.ErrorMessage>{errors.email}</FormControl.ErrorMessage>\r\n                ) : (\r\n                    <FormControl.HelperText>Introduce valid email!.</FormControl.HelperText>\r\n                )}\r\n            </FormControl>\r\n            {/* Submit button */}\r\n            <Button onPress={onSubmit} mt=\"5\" colorScheme=\"cyan\">\r\n                Login\r\n            </Button>\r\n            <Center>\r\n            <Link\r\n            _text={{\r\n                fontSize: \"xl\",\r\n                _light: {\r\n                color: \"cyan.500\",\r\n                },\r\n                color: \"cyan.300\",\r\n            }}\r\n            onPress={handleLinkClick}\r\n            isUnderlined\r\n            _hover={{\r\n                _text: {\r\n                _light: {\r\n                    color: \"cyan.600\",\r\n                },\r\n                color: \"cyan.400\",\r\n                },\r\n            }}\r\n            >\r\n            Login\r\n            </Link>\r\n            </Center>\r\n        </VStack>\r\n        </Box>\r\n    );\r\n}\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,kBAAkB,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,GAAG,EAAEC,OAAO,EAAEC,IAAI,QAAQ,aAAa;AACvH,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,eAAe,SAASC,cAAcA,CAAA,EAAG;EACrC,IAAAC,eAAA,GAA4BjB,KAAK,CAACkB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAvCI,QAAQ,GAAAF,gBAAA;IAAEG,OAAO,GAAAH,gBAAA;EACxB,IAAAI,gBAAA,GAA4BvB,KAAK,CAACkB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAAvCE,MAAM,GAAAD,gBAAA;IAAEE,SAAS,GAAAF,gBAAA;EACxB,IAAAG,gBAAA,GAAwC3B,KAAK,CAACkB,QAAQ,CAAC,KAAK,CAAC;IAAAU,gBAAA,GAAAR,cAAA,CAAAO,gBAAA;IAAtDE,YAAY,GAAAD,gBAAA;IAAEE,eAAe,GAAAF,gBAAA;EACpC,IAAAG,gBAAA,GAA0B/B,KAAK,CAACkB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAc,gBAAA,GAAAZ,cAAA,CAAAW,gBAAA;IAArCE,KAAK,GAAAD,gBAAA;IAAEE,QAAQ,GAAAF,gBAAA;EAGtB,IAAMG,UAAU,GAAG,kDAAkD;EAErE,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IACxB,IAAIf,QAAQ,CAACY,KAAK,KAAKI,SAAS,EAAE;MAC9BX,SAAS,CAAAY,aAAA,CAAAA,aAAA,KAAMb,MAAM;QAAEQ,KAAK,EAAE;MAAkB,EAAE,CAAC;MACnD,OAAO,KAAK;IAChB,CAAC,MAAM,IAAI,CAACJ,YAAY,EAAE;MACtBH,SAAS,CAAAY,aAAA,CAAAA,aAAA,KAAMb,MAAM;QAAEQ,KAAK,EAAE;MAAyB,EAAE,CAAC;MAC1D,OAAO,KAAK;IAChB;IAEA,OAAO,IAAI;EACf,CAAC;EAED,IAAMM,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IAEnBb,SAAS,CAAC,CAAC,CAAC,CAAC;IAEb,IAAIG,YAAY,EAAE;MACdW,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC5B,CAAC,MAAM;MACHD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IACpC;EACJ,CAAC;EAED,SAASC,UAAUA,CAACC,KAAK,EAAE;IACvBT,QAAQ,CAACS,KAAK,CAAC;IACfb,eAAe,CAACK,UAAU,CAACS,IAAI,CAACD,KAAK,CAAC,CAAC;IACvCE,WAAW,CAAC,CAAC;EACjB;EAGA,IAAMA,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtB,IAAI,OAAO,IAAIpB,MAAM,EAAE;MACnB,IAAQQ,MAAK,GAAoBR,MAAM,CAA/BQ,KAAK;QAAKa,UAAU,GAAAC,wBAAA,CAAKtB,MAAM,EAAAuB,SAAA;MACvCtB,SAAS,CAACoB,UAAU,CAAC;IACzB;EACJ,CAAC;EAGG,IAAMG,UAAU,GAAGtC,aAAa,CAAC,CAAC;EAIlC,IAAMuC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAG1BD,UAAU,CAACE,QAAQ,CAAC,OAAO,CAAC;EAChC,CAAC;EAIL,OACItC,IAAA,CAACL,GAAG;IAAC4C,IAAI,EAAE,CAAE;IAACC,EAAE,EAAC,MAAM;IAACC,UAAU,EAAC,QAAQ;IAACC,cAAc,EAAC,QAAQ;IAAAC,QAAA,EACnEzC,KAAA,CAACd,MAAM;MAACwD,KAAK,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,IAAI,EAAC,OAAO;MAAAH,QAAA,GACnC3C,IAAA,CAACN,KAAK;QACFqD,MAAM,EAAEC,OAAO,qBAAqB,CAAE;QACtCC,GAAG,EAAC,gBAAgB;QACpBC,IAAI,EAAC,IAAI;QACTC,UAAU,EAAE;MAAG,CAClB,CAAC,EACNnD,IAAA,CAACR,MAAM;QAAAmD,QAAA,EACH3C,IAAA,CAACJ,OAAO;UAACsD,IAAI,EAAC,IAAI;UAACE,EAAE,EAAC,GAAG;UAAAT,QAAA,EAAC;QAE1B,CAAS;MAAC,CACN,CAAC,EAELzC,KAAA,CAACb,WAAW;QAACgE,UAAU;QAACC,SAAS,EAAE,OAAO,IAAI1C,MAAO;QAAA+B,QAAA,GACjD3C,IAAA,CAACX,WAAW,CAACkE,KAAK;UAACC,KAAK,EAAE;YAAEC,IAAI,EAAE;UAAK,CAAE;UAAAd,QAAA,EAAC;QAAK,CAAmB,CAAC,EACnE3C,IAAA,CAACV,KAAK;UACFoE,WAAW,EAAC,kBAAkB;UAC9BC,YAAY,EAAE,SAAAA,aAAC7B,KAAK,EAAK;YACrBrB,OAAO,CAAAgB,aAAA,CAAAA,aAAA,KAAMjB,QAAQ;cAAEY,KAAK,EAAEU;YAAK,EAAE,CAAC;YACtCE,WAAW,CAAC,CAAC;UACjB;QAAE,CACL,CAAC,EACD,OAAO,IAAIpB,MAAM,GACdZ,IAAA,CAACX,WAAW,CAACuE,YAAY;UAAAjB,QAAA,EAAE/B,MAAM,CAACQ;QAAK,CAA2B,CAAC,GAEnEpB,IAAA,CAACX,WAAW,CAACwE,UAAU;UAAAlB,QAAA,EAAC;QAAuB,CAAwB,CAC1E;MAAA,CACQ,CAAC,EAEd3C,IAAA,CAACP,MAAM;QAACqE,OAAO,EAAEpC,QAAS;QAACqC,EAAE,EAAC,GAAG;QAACC,WAAW,EAAC,MAAM;QAAArB,QAAA,EAAC;MAErD,CAAQ,CAAC,EACT3C,IAAA,CAACR,MAAM;QAAAmD,QAAA,EACP3C,IAAA,CAACH,IAAI;UACL2D,KAAK,EAAE;YACHS,QAAQ,EAAE,IAAI;YACdC,MAAM,EAAE;cACRC,KAAK,EAAE;YACP,CAAC;YACDA,KAAK,EAAE;UACX,CAAE;UACFL,OAAO,EAAEzB,eAAgB;UACzB+B,YAAY;UACZC,MAAM,EAAE;YACJb,KAAK,EAAE;cACPU,MAAM,EAAE;gBACJC,KAAK,EAAE;cACX,CAAC;cACDA,KAAK,EAAE;YACP;UACJ,CAAE;UAAAxB,QAAA,EACD;QAED,CAAM;MAAC,CACC,CAAC;IAAA,CACL;EAAC,CACJ,CAAC;AAEd"},"metadata":{},"sourceType":"module","externalDependencies":[]}