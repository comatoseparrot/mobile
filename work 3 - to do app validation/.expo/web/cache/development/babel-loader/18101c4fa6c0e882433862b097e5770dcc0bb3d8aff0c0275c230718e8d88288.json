{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { VStack, FormControl, Input, NativeBaseProvider, Center, Button, Image } from 'native-base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FormExample() {\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    formData = _React$useState2[0],\n    setData = _React$useState2[1];\n  var _React$useState3 = React.useState({}),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    errors = _React$useState4[0],\n    setErrors = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isPassValid = _React$useState6[0],\n    setisPassValid = _React$useState6[1];\n  var _React$useState7 = React.useState(''),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    password = _React$useState8[0],\n    setPassword = _React$useState8[1];\n  var passRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=])[A-Za-z0-9@#$%^&+!=]{8,}$/;\n  var validateName = function validateName() {\n    if (formData.name === undefined) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        name: 'Name is required'\n      }));\n      return false;\n    } else if (formData.name.length < 3) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        name: 'Name is too short'\n      }));\n      return false;\n    }\n    return true;\n  };\n  var onSubmit = function onSubmit() {\n    validateName() ? console.log('Submitted') : console.log('Validation Failed');\n  };\n  function onSetPassword(value) {\n    setPassword(value);\n    setisPassValid(passRegex.test(value));\n  }\n  var validatePassword = function validatePassword() {\n    if (formData.password === undefined) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        password: 'Pasword is required'\n      }));\n      return false;\n    } else if (!isPassValid) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        password: 'Password must have 1 lowercase, capita letter, number, special character, and lenght of >8'\n      }));\n      return false;\n    }\n    return _jsxs(VStack, {\n      width: \"90%\",\n      mx: \"3\",\n      maxW: \"300px\",\n      children: [_jsx(Image, {\n        source: require(\"../assets/logo.png\"),\n        alt: \"Alternate Text\",\n        size: \"xl\",\n        marginLeft: 35\n      }), _jsxs(FormControl, {\n        isRequired: true,\n        isInvalid: 'name' in errors,\n        children: [_jsx(FormControl.Label, {\n          _text: {\n            bold: true\n          },\n          children: \"Name\"\n        }), _jsx(Input, {\n          placeholder: \"John\",\n          onChangeText: function onChangeText(value) {\n            return setData(_objectSpread(_objectSpread({}, formData), {}, {\n              name: value\n            }));\n          }\n        }), 'name' in errors ? _jsx(FormControl.ErrorMessage, {\n          children: errors.name\n        }) : _jsx(FormControl.HelperText, {\n          children: \"Name should contain atleast 3 character.\"\n        })]\n      }), _jsxs(FormControl, {\n        isRequired: true,\n        isInvalid: 'password' in errors,\n        children: [_jsx(FormControl.Label, {\n          _text: {\n            bold: true\n          },\n          children: \"Password\"\n        }), _jsx(Input, {\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(value) {\n            setData(_objectSpread(_objectSpread({}, formData), {}, {\n              password: value\n            }));\n            onSetPassword(value);\n          },\n          secureTextEntry: true\n        }), 'password' in errors ? _jsx(FormControl.ErrorMessage, {\n          children: errors.password\n        }) : _jsx(FormControl.HelperText, {\n          children: \"Password must have 1 lowercase, capital letter, number, special character, and a length of 8 or more.\"\n        })]\n      }), _jsx(Button, {\n        onPress: onSubmit,\n        mt: \"5\",\n        colorScheme: \"cyan\",\n        children: \"Submit\"\n      })]\n    });\n  };\n}","map":{"version":3,"names":["React","VStack","FormControl","Input","NativeBaseProvider","Center","Button","Image","jsx","_jsx","jsxs","_jsxs","FormExample","_React$useState","useState","_React$useState2","_slicedToArray","formData","setData","_React$useState3","_React$useState4","errors","setErrors","_React$useState5","_React$useState6","isPassValid","setisPassValid","_React$useState7","_React$useState8","password","setPassword","passRegex","validateName","name","undefined","_objectSpread","length","onSubmit","console","log","onSetPassword","value","test","validatePassword","width","mx","maxW","children","source","require","alt","size","marginLeft","isRequired","isInvalid","Label","_text","bold","placeholder","onChangeText","ErrorMessage","HelperText","secureTextEntry","onPress","mt","colorScheme"],"sources":["C:/Users/jazze/Desktop/todo-list-mobile-main/Components/FormExample.js"],"sourcesContent":["import React from 'react';\r\nimport { VStack, FormControl, Input, NativeBaseProvider, Center, Button, Image } from 'native-base';\r\n\r\nexport default function FormExample() {\r\n    const [formData, setData] = React.useState({});\r\n    const [errors, setErrors] = React.useState({});\r\n    const [isPassValid, setisPassValid] = React.useState(false);\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    // RegEx\r\n    const passRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=])[A-Za-z0-9@#$%^&+!=]{8,}$/;\r\n\r\n    const validateName = () => {\r\n        if (formData.name === undefined) {\r\n        setErrors({ ...errors,\r\n        name: 'Name is required'\r\n        });\r\n        return false;\r\n    } else if (formData.name.length < 3) {\r\n        setErrors({ ...errors,\r\n        name: 'Name is too short'\r\n        });\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n    };\r\n\r\n    const onSubmit = () => {\r\n    validateName() ? console.log('Submitted') : console.log('Validation Failed');\r\n    };\r\n\r\n    function onSetPassword(value) {\r\n        setPassword(value);\r\n        setisPassValid(passRegex.test(value));\r\n        \r\n    }\r\n\r\n    const validatePassword = () => {\r\n        if (formData.password === undefined) {\r\n        setErrors({ ...errors,\r\n        password: 'Pasword is required'\r\n        });\r\n        return false;\r\n    } else if (!isPassValid) {\r\n        setErrors({ ...errors,\r\n        password: 'Password must have 1 lowercase, capita letter, number, special character, and lenght of >8'\r\n        });\r\n        return false;\r\n    }\r\n\r\n    // Form\r\n    return <VStack width=\"90%\" mx=\"3\" maxW=\"300px\">\r\n        <Image\r\n        source={require(\"../assets/logo.png\")}\r\n        alt=\"Alternate Text\"\r\n        size=\"xl\"\r\n        marginLeft={35}\r\n        />\r\n        {/* Name */}\r\n        <FormControl isRequired isInvalid={'name' in errors}>\r\n        <FormControl.Label _text={{\r\n        bold: true\r\n        }}>Name</FormControl.Label>\r\n        <Input placeholder=\"John\" onChangeText={value => setData({ ...formData,\r\n        name: value\r\n        })} />\r\n        {'name' in errors ? <FormControl.ErrorMessage>{errors.name}</FormControl.ErrorMessage> : <FormControl.HelperText>\r\n            Name should contain atleast 3 character.\r\n            </FormControl.HelperText>}\r\n        </FormControl>\r\n         {/* Password */}\r\n        <FormControl isRequired isInvalid={'password' in errors}>\r\n        <FormControl.Label _text={{ bold: true }}>Password</FormControl.Label>\r\n        <Input\r\n        placeholder=\"Password\"\r\n        onChangeText={(value) => {\r\n            setData({ ...formData, password: value });\r\n            onSetPassword(value); // update isPassValid\r\n        }}\r\n        secureTextEntry // hide password\r\n        />\r\n        {'password' in errors ? (\r\n        <FormControl.ErrorMessage>{errors.password}</FormControl.ErrorMessage>\r\n        ) : (\r\n        <FormControl.HelperText>\r\n            Password must have 1 lowercase, capital letter, number, special character, and a length of 8 or more.\r\n        </FormControl.HelperText>\r\n        )}\r\n        </FormControl>\r\n         {/* Submit button */}\r\n        <Button onPress={onSubmit} mt=\"5\" colorScheme=\"cyan\">\r\n        Submit\r\n        </Button>\r\n    </VStack>;\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}