{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from \"react\";\nimport { VStack, FormControl, Input, Button, Text, Image } from \"native-base\";\nimport CustomInput from \"./CustomInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Signup() {\n  var _useState = useState({\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errors = _useState4[0],\n    setErrors = _useState4[1];\n  var validateForm = function validateForm() {\n    var newErrors = {};\n    if (formData.name.trim() === \"\") {\n      newErrors.name = \"Name is required\";\n    }\n    if (formData.email.trim() === \"\") {\n      newErrors.email = \"Email is required\";\n    }\n    if (formData.password.trim() === \"\") {\n      newErrors.password = \"Password is required\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  var handleSubmit = function handleSubmit() {\n    if (validateForm()) {\n      console.log(\"Form data:\", formData);\n    } else {\n      console.log(\"Form data is invalid\");\n    }\n  };\n  return _jsx(_Fragment, {\n    children: _jsxs(VStack, {\n      width: \"90%\",\n      mx: \"3\",\n      maxW: \"300px\",\n      children: [_jsxs(FormControl, {\n        isRequired: true,\n        isInvalid: \"name\" in errors,\n        children: [_jsx(FormControl.Label, {\n          bold: true,\n          children: \"Name\"\n        }), _jsx(Input, {\n          placeholder: \"John\",\n          onChangeText: function onChangeText(value) {\n            return setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n              name: value\n            }));\n          }\n        }), errors.name && _jsx(FormControl.ErrorMessage, {\n          children: errors.name\n        })]\n      }), _jsxs(FormControl, {\n        isRequired: true,\n        isInvalid: \"email\" in errors,\n        children: [_jsx(FormControl.Label, {\n          bold: true,\n          children: \"Email\"\n        }), _jsx(Input, {\n          placeholder: \"john@example.com\",\n          onChangeText: function onChangeText(value) {\n            return setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n              email: value\n            }));\n          }\n        }), errors.email && _jsx(FormControl.ErrorMessage, {\n          children: errors.email\n        })]\n      }), _jsxs(FormControl, {\n        isRequired: true,\n        isInvalid: \"password\" in errors,\n        children: [_jsx(FormControl.Label, {\n          bold: true,\n          children: \"Password\"\n        }), _jsx(Input, {\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(value) {\n            return setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n              password: value\n            }));\n          },\n          secureTextEntry: true\n        }), errors.password && _jsx(FormControl.ErrorMessage, {\n          children: errors.password\n        })]\n      }), _jsx(Button, {\n        onPress: handleSubmit,\n        mt: \"5\",\n        colorScheme: \"cyan\",\n        children: \"Sign Up\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","VStack","FormControl","Input","Button","Text","Image","CustomInput","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Signup","_useState","name","email","password","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","errors","setErrors","validateForm","newErrors","trim","Object","keys","length","handleSubmit","console","log","children","width","mx","maxW","isRequired","isInvalid","Label","bold","placeholder","onChangeText","value","_objectSpread","ErrorMessage","secureTextEntry","onPress","mt","colorScheme"],"sources":["C:/Users/jazze/Desktop/todo-list-mobile-main/Components/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { VStack, FormControl, Input, Button, Text, Image } from \"native-base\";\nimport CustomInput from \"./CustomInput\";\n\nexport default function Signup() {\n  // Define form fields and their initial values\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  // Define state for error messages\n  const [errors, setErrors] = useState({});\n\n  // Function to validate form data\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Validate name\n    if (formData.name.trim() === \"\") {\n      newErrors.name = \"Name is required\";\n    }\n\n    // Validate email\n    if (formData.email.trim() === \"\") {\n      newErrors.email = \"Email is required\";\n    }\n\n    // Validate password\n    if (formData.password.trim() === \"\") {\n      newErrors.password = \"Password is required\";\n    }\n\n    setErrors(newErrors);\n\n    // Return true if there are no errors\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Function to handle form submission\n  const handleSubmit = () => {\n    if (validateForm()) {\n      // Form data is valid, you can perform further actions here\n      console.log(\"Form data:\", formData);\n    } else {\n      // Form data is invalid, display error messages\n      console.log(\"Form data is invalid\");\n    }\n  };\n\n  return (\n    <>\n      <VStack width=\"90%\" mx=\"3\" maxW=\"300px\">\n        <FormControl isRequired isInvalid={\"name\" in errors}>\n          <FormControl.Label bold>Name</FormControl.Label>\n          <Input\n            placeholder=\"John\"\n            onChangeText={(value) =>\n              setFormData({ ...formData, name: value })\n            }\n          />\n          {errors.name && (\n            <FormControl.ErrorMessage>{errors.name}</FormControl.ErrorMessage>\n          )}\n        </FormControl>\n\n        <FormControl isRequired isInvalid={\"email\" in errors}>\n          <FormControl.Label bold>Email</FormControl.Label>\n          <Input\n            placeholder=\"john@example.com\"\n            onChangeText={(value) =>\n              setFormData({ ...formData, email: value })\n            }\n          />\n          {errors.email && (\n            <FormControl.ErrorMessage>{errors.email}</FormControl.ErrorMessage>\n          )}\n        </FormControl>\n\n        <FormControl isRequired isInvalid={\"password\" in errors}>\n          <FormControl.Label bold>Password</FormControl.Label>\n          <Input\n            placeholder=\"Password\"\n            onChangeText={(value) =>\n              setFormData({ ...formData, password: value })\n            }\n            secureTextEntry\n          />\n          {errors.password && (\n            <FormControl.ErrorMessage>{errors.password}</FormControl.ErrorMessage>\n          )}\n        </FormControl>\n\n        <Button onPress={handleSubmit} mt=\"5\" colorScheme=\"cyan\">\n          Sign Up\n        </Button>\n      </VStack>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}