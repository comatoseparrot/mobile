{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"name\", \"password\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { VStack, FormControl, Input, NativeBaseProvider, Center, Button, Image, Box } from 'native-base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FormExample() {\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    formData = _React$useState2[0],\n    setData = _React$useState2[1];\n  var _React$useState3 = React.useState({}),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    errors = _React$useState4[0],\n    setErrors = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isPassValid = _React$useState6[0],\n    setisPassValid = _React$useState6[1];\n  var _React$useState7 = React.useState({}),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    password = _React$useState8[0],\n    setPassword = _React$useState8[1];\n  var passRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=])[A-Za-z0-9@#$%^&+!=]{8,}$/;\n  var validateName = function validateName() {\n    if (formData.name === undefined) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        name: 'Name is required'\n      }));\n      return false;\n    } else if (formData.name.length < 3) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        name: 'Name is too short'\n      }));\n      return false;\n    }\n    return true;\n  };\n  var onSubmit = function onSubmit() {\n    setErrors({});\n    var isNameValid = validateName();\n    var isPasswordValid = validatePassword();\n    if (isNameValid && isPasswordValid) {\n      console.log('Submitted');\n    } else {\n      console.log('Validation Failed');\n    }\n  };\n  function onSetPassword(value) {\n    setPassword(value);\n    setisPassValid(passRegex.test(value));\n    clearErrors();\n  }\n  var validatePassword = function validatePassword() {\n    if (formData.password === undefined || formData.password === '') {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        password: 'Password is required'\n      }));\n      return false;\n    } else if (!isPassValid) {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        password: 'Password must have 1 lowercase, capital letter, number, special character, and a length of >8'\n      }));\n      return false;\n    }\n    return true;\n  };\n  var clearErrors = function clearErrors() {\n    if ('name' in errors || 'password' in errors) {\n      var name = errors.name,\n        _password = errors.password,\n        restErrors = _objectWithoutProperties(errors, _excluded);\n      setErrors(restErrors);\n    }\n  };\n  return _jsx(Box, {\n    flex: 1,\n    bg: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: _jsxs(VStack, {\n      width: \"90%\",\n      mx: \"3\",\n      maxW: \"300px\",\n      children: [_jsx(Image, {\n        source: require(\"../assets/logo.png\"),\n        alt: \"Alternate Text\",\n        size: \"xl\",\n        marginLeft: 75\n      }), _jsx(\"h2\", {\n        children: \"Login\"\n      }), _jsxs(FormControl, {\n        isRequired: true,\n        isInvalid: 'name' in errors,\n        children: [_jsx(FormControl.Label, {\n          _text: {\n            bold: true\n          },\n          children: \"Name\"\n        }), _jsx(Input, {\n          placeholder: \"John\",\n          onChangeText: function onChangeText(value) {\n            setData(_objectSpread(_objectSpread({}, formData), {}, {\n              name: value\n            }));\n            clearErrors();\n          }\n        }), 'name' in errors ? _jsx(FormControl.ErrorMessage, {\n          children: errors.name\n        }) : _jsx(FormControl.HelperText, {\n          children: \"Name should contain at least 3 characters.\"\n        })]\n      }), _jsxs(FormControl, {\n        isRequired: true,\n        isInvalid: 'password' in errors,\n        children: [_jsx(FormControl.Label, {\n          _text: {\n            bold: true\n          },\n          children: \"Password\"\n        }), _jsx(Input, {\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(value) {\n            setData(_objectSpread(_objectSpread({}, formData), {}, {\n              password: value\n            }));\n            onSetPassword(value);\n          },\n          secureTextEntry: true\n        }), 'password' in errors ? _jsx(FormControl.ErrorMessage, {\n          children: errors.password\n        }) : _jsx(FormControl.HelperText, {\n          children: \"Password must have 1 lowercase, capital letter, number, special character, and a length of 8 or more.\"\n        })]\n      }), _jsx(Button, {\n        onPress: onSubmit,\n        mt: \"5\",\n        colorScheme: \"cyan\",\n        children: \"Login\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","VStack","FormControl","Input","NativeBaseProvider","Center","Button","Image","Box","jsx","_jsx","jsxs","_jsxs","FormExample","_React$useState","useState","_React$useState2","_slicedToArray","formData","setData","_React$useState3","_React$useState4","errors","setErrors","_React$useState5","_React$useState6","isPassValid","setisPassValid","_React$useState7","_React$useState8","password","setPassword","passRegex","validateName","name","undefined","_objectSpread","length","onSubmit","isNameValid","isPasswordValid","validatePassword","console","log","onSetPassword","value","test","clearErrors","restErrors","_objectWithoutProperties","_excluded","flex","bg","alignItems","justifyContent","children","width","mx","maxW","source","require","alt","size","marginLeft","isRequired","isInvalid","Label","_text","bold","placeholder","onChangeText","ErrorMessage","HelperText","secureTextEntry","onPress","mt","colorScheme"],"sources":["C:/Users/jazze/Desktop/todo-list-mobile-main/Components/FormExample.js"],"sourcesContent":["import React from 'react';\r\nimport { VStack, FormControl, Input, NativeBaseProvider, Center, Button, Image, Box} from 'native-base';\r\n\r\nexport default function FormExample() {\r\n    const [formData, setData] = React.useState({});\r\n    const [errors, setErrors] = React.useState({});\r\n    const [isPassValid, setisPassValid] = React.useState(false);\r\n    const [password, setPassword] = React.useState({});\r\n\r\n    // RegEx\r\n    const passRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=])[A-Za-z0-9@#$%^&+!=]{8,}$/;\r\n\r\n    const validateName = () => {\r\n        if (formData.name === undefined) {\r\n            setErrors({ ...errors, name: 'Name is required' });\r\n            return false;\r\n        } else if (formData.name.length < 3) {\r\n            setErrors({ ...errors, name: 'Name is too short' });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        // Clear errors\r\n        setErrors({});\r\n\r\n        const isNameValid = validateName();\r\n        const isPasswordValid = validatePassword();\r\n\r\n        if (isNameValid && isPasswordValid) {\r\n            console.log('Submitted');\r\n        } else {\r\n            console.log('Validation Failed');\r\n        }\r\n    };\r\n\r\n    function onSetPassword(value) {\r\n        setPassword(value);\r\n        setisPassValid(passRegex.test(value));\r\n        clearErrors(); // Clear both field errors when input changes\r\n    }\r\n\r\n    const validatePassword = () => {\r\n        if (formData.password === undefined || formData.password === '') {\r\n            setErrors({ ...errors, password: 'Password is required' });\r\n            return false;\r\n        } else if (!isPassValid) {\r\n            setErrors({\r\n                ...errors,\r\n                password: 'Password must have 1 lowercase, capital letter, number, special character, and a length of >8',\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    // Clear both field errors\r\n    const clearErrors = () => {\r\n        if ('name' in errors || 'password' in errors) {\r\n            const { name, password, ...restErrors } = errors;\r\n            setErrors(restErrors);\r\n        }\r\n    };\r\n\r\n    // Form\r\n    return (\r\n        <Box flex={1} bg=\"#fff\" alignItems=\"center\" justifyContent=\"center\">\r\n        <VStack width=\"90%\" mx=\"3\" maxW=\"300px\">\r\n            <Image\r\n                source={require(\"../assets/logo.png\")}\r\n                alt=\"Alternate Text\"\r\n                size=\"xl\"\r\n                marginLeft={75}\r\n            />\r\n            <h2>Login</h2>\r\n            {/* Name */}\r\n            <FormControl isRequired isInvalid={'name' in errors}>\r\n                <FormControl.Label _text={{ bold: true }}>Name</FormControl.Label>\r\n                <Input\r\n                    placeholder=\"John\"\r\n                    onChangeText={(value) => {\r\n                        setData({ ...formData, name: value });\r\n                        clearErrors(); // Clear both name and password errors when the input changes\r\n                    }}\r\n                />\r\n                {'name' in errors ? (\r\n                    <FormControl.ErrorMessage>{errors.name}</FormControl.ErrorMessage>\r\n                ) : (\r\n                    <FormControl.HelperText>Name should contain at least 3 characters.</FormControl.HelperText>\r\n                )}\r\n            </FormControl>\r\n            {/* Password */}\r\n            <FormControl isRequired isInvalid={'password' in errors}>\r\n                <FormControl.Label _text={{ bold: true }}>Password</FormControl.Label>\r\n                <Input\r\n                    placeholder=\"Password\"\r\n                    onChangeText={(value) => {\r\n                        setData({ ...formData, password: value });\r\n                        onSetPassword(value); // update isPassValid\r\n                    }}\r\n                    secureTextEntry // hide password\r\n                />\r\n                {'password' in errors ? (\r\n                    <FormControl.ErrorMessage>{errors.password}</FormControl.ErrorMessage>\r\n                ) : (\r\n                    <FormControl.HelperText>\r\n                        Password must have 1 lowercase, capital letter, number, special character, and a length of 8 or more.\r\n                    </FormControl.HelperText>\r\n                )}\r\n            </FormControl>\r\n            {/* Submit button */}\r\n            <Button onPress={onSubmit} mt=\"5\" colorScheme=\"cyan\">\r\n                Login\r\n            </Button>\r\n        </VStack>\r\n        </Box>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}